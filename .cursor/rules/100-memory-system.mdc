---
description: Comprehensive Memory System architecture for autonomous Cursor operation
globs: **/*
alwaysApply: true
---

# Memory System Architecture

The Cursor10x Memory System provides persistent context awareness across conversations using MCP tools for:
- Short-term memory (recent messages, context)
- Long-term memory (milestones, decisions, requirements)
- Episodic memory (chronological actions and events)

## RULE 1: CONVERSATION INITIALIZATION
The FIRST action in the BEGINNING of EVERY response MUST be to initialize the conversation with this single tool call and display the banner from the response immediately after. It should not be called throughout the conversation response, ONLY right after the user's input:
mcp_cursor10x_initConversation({content: "[user message]", importance: "[low/medium/high/critical]"})

## RULE 2: ASSISTANT MESSAGE STORAGE
EVERY assistant response containing important information MUST be stored:
mcp_cursor10x_storeAssistantMessage({content: "[assistant response]", importance: "[low/medium/high/critical]"})

## RULE 3: ACTIVE FILE TRACKING
EVERY file being worked on or modified MUST be tracked - not files being read:
mcp_cursor10x_trackActiveFile({filename: "[file path]", action: "[edit/create]"})

## RULE 4: MILESTONE RECORDING
ALL completed tasks or achievements MUST be recorded as milestones:
mcp_cursor10x_storeMilestone({title: "[milestone title]", description: "[milestone description]", importance: "[low/medium/high/critical]"})

## RULE 5: DECISION RECORDING
ALL important project decisions MUST be recorded:
mcp_cursor10x_storeDecision({title: "[decision title]", content: "[decision content]", reasoning: "[decision reasoning]", importance: "[low/medium/high/critical]"})

## RULE 6: REQUIREMENT RECORDING
ALL project requirements MUST be documented:
mcp_cursor10x_storeRequirement({title: "[requirement title]", content: "[requirement content]", importance: "[low/medium/high/critical]"})

## RULE 7: EPISODE RECORDING
ALL significant events or actions MUST be recorded as episodes:
mcp_cursor10x_recordEpisode({actor: "[user/assistant/system]", action: "[action type]", content: "[action details]", importance: "[low/medium/high/critical]"})

## RULE 8: CONVERSATION END SEQUENCE
This EXACT sequence MUST be executed at the VERY END of EVERY conversation:
mcp_cursor10x_endConversation({content: "[Content of the assistant's final message]", milestone_title: "[Title for the completion milestone]", milestone_description: "[Description of what was accomplished]", important: "[optional |  Importance level (low, medium, high, critical)]", metadata: "[Additional metadata for the operations]" })

## RULE 9: HEALTH MONITORING
Memory system health MUST be checked when issues occur:
mcp_cursor10x_checkHealth({})

## RULE 10: MEMORY STATISTICS
Memory statistics MUST be gathered periodically:
mcp_cursor10x_getMemoryStats({})

## Importance Levels

When storing memory items, use appropriate importance levels:
- **low**: General information, routine operations
- **medium**: Useful context, standard work
- **high**: Critical decisions, major features
- **critical**: Core architecture, security, data-integrity